{
  "root": true,
  "ignorePatterns": ["**/*"],
  "plugins": ["@nrwl/nx", "@typescript-eslint", "jest", "import"],
  "parser": "@typescript-eslint/parser",
  "env": {
    "jest/globals": true,
    "node": true
  },
  "overrides": [
    {
      "files": ["*.ts", "*.tsx", "*.js", "*.jsx"],
      "parserOptions": {
        "project": ["tsconfig.base.json"]
      },
      "rules": {
        "@nrwl/nx/enforce-module-boundaries": [
          "error",
          {
            "enforceBuildableLibDependency": true,
            "allow": [],
            "depConstraints": [
              {
                "sourceTag": "*",
                "onlyDependOnLibsWithTags": ["*"]
              }
            ]
          }
        ]
      }
    },
    {
      "files": ["*.ts", "*.tsx"],
      "extends": ["plugin:@nrwl/nx/typescript", "plugin:@typescript-eslint/recommended", "eslint:recommended"],
      "rules": {
        "no-unused-vars": "off",
        "@typescript-eslint/explicit-module-boundary-types": "error",
        "@typescript-eslint/explicit-member-accessibility": ["error", { "accessibility": "no-public" }],
        "@typescript-eslint/no-unsafe-argument": "error",
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "memberLike",
            "format": ["camelCase"],
            "modifiers": ["private"],
            "leadingUnderscore": "require"
          }
        ],
        "@typescript-eslint/padding-line-between-statements": [
          "error",
          {
            "blankLine": "always",
            "prev": ["const", "let", "var"],
            "next": ["for", "if", "switch", "while", "do"]
          },
          {
            "blankLine": "never",
            "prev": ["singleline-var", "singleline-let", "singleline-const"],
            "next": ["return"]
          }
        ],
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-unused-vars": "off",
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/ban-ts-comment": "off",
        "import/order": [
          "error",
          {
            "alphabetize": {
              "caseInsensitive": true,
              "order": "asc"
            },
            "groups": ["external", "builtin", "parent", ["sibling", "index"]],
            "newlines-between": "never",
            "pathGroups": [
              {
                "group": "external",
                "pattern": "react",
                "position": "before"
              },
              {
                "group": "external",
                "pattern": "@my_org/**",
                "position": "after"
              }
            ],
            "pathGroupsExcludedImportTypes": ["builtin"]
          }
        ]
      }
    },
    {
      "files": ["*.js", "*.jsx"],
      "extends": ["plugin:@nrwl/nx/javascript"],
      "rules": {}
    }
  ]
}
