version: '3.4'

services:
  census:
    image: 127.0.0.1:5000/ps2gg:prod
    entrypoint: "sh /app/docker/entrypoint.prod.sh census"
    networks:
      - ps2gg-internal

  peepo:
    image: 127.0.0.1:5000/ps2gg:prod
    entrypoint: "sh /app/docker/entrypoint.prod.sh peepo"
    networks:
      - ps2gg-internal

  population:
    image: 127.0.0.1:5000/ps2gg:prod
    entrypoint: "sh /app/docker/entrypoint.prod.sh population"
    networks:
      - ps2gg-internal
      - ps2gg-external
    healthcheck:
      test: 'curl -f localhost:3000/healthz'
      timeout: 5s
      interval: 10s
      start_period: 60s
      retries: 5

    secrets:
      - population-db-pass
      - rabbitmq-pass

  population-db:
    image: postgres:15.2-alpine
    networks:
      - ps2gg-internal
    volumes:
      - population-db-prod:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: population
      POSTGRES_PASSWORD_FILE: /run/secrets/population-db-pass

    secrets:
      - population-db-pass
      - rabbitmq-pass

  users:
    image: 127.0.0.1:5000/ps2gg:prod
    entrypoint: "sh /app/docker/entrypoint.prod.sh users"
    networks:
      - ps2gg-internal
      - ps2gg-external
    healthcheck:
      test: 'curl -f localhost:3000/healthz'
      timeout: 5s
      interval: 10s
      start_period: 60s
      retries: 5

    secrets:
      - users-db-pass
      - rabbitmq-pass

  users-db:
    image: postgres:15.2-alpine
    networks:
      - ps2gg-internal
    volumes:
      - users-db-prod:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: users
      POSTGRES_PASSWORD_FILE: /run/secrets/users-db-pass

    secrets:
      - users-db-pass
      - rabbitmq-pass

secrets:

  population-db-pass:
    external: true
  users-db-pass:
    external: true
volumes:
  census-db-prod:
  peepo-db-prod:
  population-db-prod:
  users-db-prod:
